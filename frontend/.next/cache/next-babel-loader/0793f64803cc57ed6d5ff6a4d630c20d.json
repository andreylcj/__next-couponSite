{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Axios from 'axios';\nimport { TOP_CATEGORIES_FAIL, TOP_CATEGORIES_REQUEST, TOP_CATEGORIES_SUCCESS } from '../Constants';\nvar baseURL = process.env.BASE_URL;\nexport var listTopCategoriesAction = function listTopCategoriesAction(apiURL) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var _yield$Axios$get, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch({\n                type: TOP_CATEGORIES_REQUEST\n              });\n              _context.prev = 1;\n              _context.next = 4;\n              return Axios.get(\"\".concat(baseURL).concat(apiURL));\n\n            case 4:\n              _yield$Axios$get = _context.sent;\n              data = _yield$Axios$get.data;\n              dispatch({\n                type: TOP_CATEGORIES_SUCCESS,\n                payload: data\n              });\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              dispatch({\n                type: TOP_CATEGORIES_FAIL,\n                payload: _context.t0.message\n              });\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 9]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/Users/Andrey luiz/Desktop/NextJS/next_project/frontend/redux_store/actions/TopCategoriesAction.js"],"names":["Axios","TOP_CATEGORIES_FAIL","TOP_CATEGORIES_REQUEST","TOP_CATEGORIES_SUCCESS","baseURL","process","env","BASE_URL","listTopCategoriesAction","apiURL","dispatch","type","get","data","payload","message"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,EAA8BC,sBAA9B,EAAsDC,sBAAtD,QAAoF,cAApF;AAEA,IAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAA5B;AAEA,OAAO,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,MAAD;AAAA;AAAA,wEAAY,iBAAOC,QAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAC/CA,cAAAA,QAAQ,CAAC;AACLC,gBAAAA,IAAI,EAAET;AADD,eAAD,CAAR;AAD+C;AAAA;AAAA,qBAKpBF,KAAK,CAACY,GAAN,WAAaR,OAAb,SAAuBK,MAAvB,EALoB;;AAAA;AAAA;AAKnCI,cAAAA,IALmC,oBAKnCA,IALmC;AAM3CH,cAAAA,QAAQ,CAAC;AAAEC,gBAAAA,IAAI,EAAER,sBAAR;AAAgCW,gBAAAA,OAAO,EAAED;AAAzC,eAAD,CAAR;AAN2C;AAAA;;AAAA;AAAA;AAAA;AAQ3CH,cAAAA,QAAQ,CAAC;AAAEC,gBAAAA,IAAI,EAAEV,mBAAR;AAA6Ba,gBAAAA,OAAO,EAAE,YAAMC;AAA5C,eAAD,CAAR;;AAR2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAZ;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhC","sourcesContent":["import Axios from 'axios'\r\nimport { TOP_CATEGORIES_FAIL, TOP_CATEGORIES_REQUEST, TOP_CATEGORIES_SUCCESS } from '../Constants';\r\n\r\nconst baseURL = process.env.BASE_URL\r\n\r\nexport const listTopCategoriesAction = (apiURL) => async (dispatch) => {\r\n    dispatch({\r\n        type: TOP_CATEGORIES_REQUEST\r\n    });\r\n    try {\r\n        const { data } = await Axios.get(`${baseURL}${apiURL}`);\r\n        dispatch({ type: TOP_CATEGORIES_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        dispatch({ type: TOP_CATEGORIES_FAIL, payload: error.message })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}