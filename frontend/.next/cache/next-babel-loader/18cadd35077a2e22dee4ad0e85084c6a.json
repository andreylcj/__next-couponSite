{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Andrey luiz\\\\Desktop\\\\NextJS\\\\next_project\\\\frontend\\\\pages\\\\registrar.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { postData } from '../assets/utils/fetchData';\nimport validRegister from '../assets/utils/ValidRegister';\nimport Loading from '../snnipets/Loading';\n\nfunction Register() {\n  const initialState = {\n    email: '',\n    password: ''\n  };\n  const {\n    0: userData,\n    1: setUserData\n  } = useState(initialState);\n  const {\n    0: submitStatus,\n    1: setSubmitStatus\n  } = useState({\n    emptyEmailToUse: false,\n    invalidEmailToUse: false,\n    emptyPasswordToUse: false,\n    invalidPasswordToUse: false,\n    existingEmail: false,\n    submitIsOk: false,\n    emailMessage: '',\n    passwordMessage: '',\n    emailIsOk: true,\n    passwordIsOk: true\n  });\n  const {\n    email,\n    password\n  } = userData;\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUserData(_objectSpread(_objectSpread({}, userData), {}, {\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      emptyEmail,\n      invalidEmail,\n      emptyPassword,\n      invalidPassword,\n      msg\n    } = validRegister(userData.email, userData.password);\n    setSubmitStatus({\n      emptyEmailToUse: emptyEmail,\n      invalidEmailToUse: invalidEmail,\n      emptyPasswordToUse: emptyPassword,\n      invalidPasswordToUse: invalidPassword\n    });\n\n    if (msg) {\n      console.log(msg);\n      return;\n    } //console.log(userData)\n\n\n    const res = await postData('/api/auth/register', userData);\n    console.log(res); //if (res.err)\n    // setSubmitStatus({ existingEmail: true })\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container text-center p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"d-block\",\n      onSubmit: handleSubmit,\n      noValidate: true,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          className: \"d-block\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\" //aria-describedby=\"emailHelp\" \n          ,\n          name: \"email\",\n          onChange: handleInputChange,\n          value: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), submitStatus.emailIsOk ? '' : submitStatus.invalidEmailToUse ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: submitStatus.emailMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 37\n        }, this) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: \"d-block\",\n          children: \"Senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          onChange: handleInputChange,\n          value: password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), submitStatus.emptyPasswordToUse ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Por favor, preencha sua senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 33\n        }, this) : submitStatus.invalidPasswordToUse ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Senha incorreta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 37\n        }, this) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: submitStatus.submitIsOk ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 37\n          }, this)\n        }, void 0, false) : 'CADASTRAR'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\nexport default Register;","map":{"version":3,"sources":["C:/Users/Andrey luiz/Desktop/NextJS/next_project/frontend/pages/registrar.js"],"names":["React","useState","postData","validRegister","Loading","Register","initialState","email","password","userData","setUserData","submitStatus","setSubmitStatus","emptyEmailToUse","invalidEmailToUse","emptyPasswordToUse","invalidPasswordToUse","existingEmail","submitIsOk","emailMessage","passwordMessage","emailIsOk","passwordIsOk","handleInputChange","e","name","value","target","handleSubmit","preventDefault","emptyEmail","invalidEmail","emptyPassword","invalidPassword","msg","console","log","res"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { postData } from '../assets/utils/fetchData'\r\nimport validRegister from '../assets/utils/ValidRegister'\r\nimport Loading from '../snnipets/Loading'\r\n\r\nfunction Register() {\r\n    const initialState = { email: '', password: '' }\r\n    const [userData, setUserData] = useState(initialState)\r\n    const [submitStatus, setSubmitStatus] = useState({\r\n        emptyEmailToUse: false,\r\n        invalidEmailToUse: false,\r\n        emptyPasswordToUse: false,\r\n        invalidPasswordToUse: false,\r\n        existingEmail: false,\r\n        submitIsOk: false,\r\n        emailMessage: '',\r\n        passwordMessage: '',\r\n        emailIsOk: true,\r\n        passwordIsOk: true,\r\n    })\r\n\r\n    const { email, password } = userData\r\n\r\n    const handleInputChange = e => {\r\n        const { name, value } = e.target\r\n        setUserData({ ...userData, [name]: value })\r\n    }\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault()\r\n        const { emptyEmail, invalidEmail, emptyPassword, invalidPassword, msg } = validRegister(userData.email, userData.password)\r\n        setSubmitStatus({\r\n            emptyEmailToUse: emptyEmail,\r\n            invalidEmailToUse: invalidEmail,\r\n            emptyPasswordToUse: emptyPassword,\r\n            invalidPasswordToUse: invalidPassword,\r\n        })\r\n\r\n        if (msg) {\r\n            console.log(msg)\r\n            return\r\n        }\r\n        //console.log(userData)\r\n\r\n        const res = await postData('/api/auth/register', userData)\r\n\r\n        console.log(res)\r\n\r\n        //if (res.err)\r\n        // setSubmitStatus({ existingEmail: true })\r\n    }\r\n\r\n    return (\r\n        <div className=\"container text-center p-4\">\r\n            <form className=\"d-block\" onSubmit={handleSubmit} noValidate>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"email\" className=\"d-block\">Email</label>\r\n                    <input type=\"email\" id=\"email\"\r\n                        //aria-describedby=\"emailHelp\" \r\n                        name=\"email\"\r\n                        onChange={handleInputChange} value={email}\r\n                    />\r\n                    {\r\n                        submitStatus.emailIsOk ?\r\n                            (\r\n                                ''\r\n                            ) : submitStatus.invalidEmailToUse ?\r\n                                (\r\n                                    <p>{submitStatus.emailMessage}</p>\r\n                                ) :\r\n                                (\r\n                                    ''\r\n                                )\r\n                    }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\" className=\"d-block\">Senha</label>\r\n                    <input type=\"password\" id=\"password\" name=\"password\"\r\n                        onChange={handleInputChange} value={password} />\r\n                    {\r\n                        submitStatus.emptyPasswordToUse ?\r\n                            (\r\n                                <p>Por favor, preencha sua senha</p>\r\n                            ) : submitStatus.invalidPasswordToUse ?\r\n                                (\r\n                                    <p>Senha incorreta</p>\r\n                                ) :\r\n                                (\r\n                                    ''\r\n                                )\r\n                    }\r\n                </div>\r\n                <button type=\"submit\">\r\n                    {\r\n                        submitStatus.submitIsOk ?\r\n                            (\r\n                                <>\r\n                                    <Loading />\r\n                                </>\r\n                            ) : (\r\n                                'CADASTRAR'\r\n                            )\r\n                    }\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n"]},"metadata":{},"sourceType":"module"}