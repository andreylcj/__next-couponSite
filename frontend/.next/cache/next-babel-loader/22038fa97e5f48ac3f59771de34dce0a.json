{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Andrey luiz\\\\Desktop\\\\NextJS\\\\next_project\\\\frontend\\\\pages\\\\registrar.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { postData } from '../assets/utils/fetchData';\nimport validRegister from '../assets/utils/ValidRegister';\nimport { registerAction } from '../redux_store/actions/RegisterAction';\nimport Loading from '../snnipets/Loading';\n\nfunction Register() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state;\n  }),\n      registerReduxStore = _useSelector.registerReduxStore;\n\n  var _categoryReduxStore = categoryReduxStore,\n      loading = _categoryReduxStore.loading,\n      registerRedux = _categoryReduxStore.registerRedux;\n  var register = registerRedux;\n  var initialState = {\n    email: '',\n    password: ''\n  };\n\n  var _useState = useState(initialState),\n      userData = _useState[0],\n      setUserData = _useState[1];\n\n  var _useState2 = useState({\n    emailMessage: '',\n    passwordMessage: ''\n  }),\n      submitStatus = _useState2[0],\n      setSubmitStatus = _useState2[1];\n\n  var email = userData.email,\n      password = userData.password;\n\n  var handleInputChange = function handleInputChange(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    setUserData(_objectSpread(_objectSpread({}, userData), {}, _defineProperty({}, name, value)));\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var _validRegister, emailMessage, passwordMessage, res;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _validRegister = validRegister(userData.email, userData.password), emailMessage = _validRegister.emailMessage, passwordMessage = _validRegister.passwordMessage;\n              setSubmitStatus({\n                emailMessage: emailMessage,\n                passwordMessage: passwordMessage\n              });\n\n              if (!(emailMessage || passwordMessage)) {\n                _context.next = 6;\n                break;\n              }\n\n              console.log('emailMessage: ' + emailMessage + '\\npasswordMessage: ' + passwordMessage);\n              return _context.abrupt(\"return\");\n\n            case 6:\n              _context.next = 8;\n              return postData('/api/auth/register', userData);\n\n            case 8:\n              res = _context.sent;\n              dispatch(registerAction('/api/auth/register', userData));\n\n              if (!(res.status == 400)) {\n                _context.next = 13;\n                break;\n              }\n\n              setSubmitStatus({\n                emailMessage: res.errMessage\n              });\n              return _context.abrupt(\"return\");\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container text-center p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"d-block\",\n      onSubmit: handleSubmit,\n      noValidate: true,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          className: \"d-block\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\" //aria-describedby=\"emailHelp\" \n          ,\n          name: \"email\",\n          onChange: handleInputChange,\n          value: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), submitStatus.emailMessage ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: submitStatus.emailMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 33\n        }, this) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: \"d-block\",\n          children: \"Senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          onChange: handleInputChange,\n          value: password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), submitStatus.passwordMessage ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: submitStatus.passwordMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 33\n        }, this) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: submitStatus.loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 37\n          }, this)\n        }, void 0, false) : 'CADASTRAR'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Register, \"JN6Si7xQ4j63HeNQyJ6xF7tFuD4=\", true);\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/Andrey luiz/Desktop/NextJS/next_project/frontend/pages/registrar.js"],"names":["React","useState","postData","validRegister","registerAction","Loading","Register","dispatch","useDispatch","useSelector","state","registerReduxStore","categoryReduxStore","loading","registerRedux","register","initialState","email","password","userData","setUserData","emailMessage","passwordMessage","submitStatus","setSubmitStatus","handleInputChange","e","target","name","value","handleSubmit","preventDefault","console","log","res","status","errMessage"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { postData } from '../assets/utils/fetchData'\r\nimport validRegister from '../assets/utils/ValidRegister'\r\nimport { registerAction } from '../redux_store/actions/RegisterAction';\r\nimport Loading from '../snnipets/Loading'\r\n\r\nfunction Register() {\r\n\r\n    const dispatch = useDispatch();\r\n    const { registerReduxStore } = useSelector((state) => state)\r\n    const { loading, registerRedux } = categoryReduxStore;\r\n    const register = registerRedux;\r\n\r\n    const initialState = { email: '', password: '' }\r\n    const [userData, setUserData] = useState(initialState)\r\n    const [submitStatus, setSubmitStatus] = useState({\r\n        emailMessage: '',\r\n        passwordMessage: '',\r\n    })\r\n\r\n    const { email, password } = userData\r\n\r\n    const handleInputChange = e => {\r\n        const { name, value } = e.target\r\n        setUserData({ ...userData, [name]: value })\r\n    }\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault()\r\n\r\n        const { emailMessage, passwordMessage } = validRegister(userData.email, userData.password)\r\n\r\n        setSubmitStatus({\r\n            emailMessage: emailMessage,\r\n            passwordMessage: passwordMessage,\r\n        })\r\n\r\n        if (emailMessage || passwordMessage) {\r\n            console.log('emailMessage: ' + emailMessage + '\\npasswordMessage: ' + passwordMessage)\r\n            return\r\n        }\r\n\r\n        const res = await postData('/api/auth/register', userData)\r\n        dispatch(registerAction('/api/auth/register', userData))\r\n\r\n\r\n        if (res.status == 400) {\r\n            setSubmitStatus({\r\n                emailMessage: res.errMessage,\r\n            })\r\n            return\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container text-center p-4\">\r\n            <form className=\"d-block\" onSubmit={handleSubmit} noValidate>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"email\" className=\"d-block\">Email</label>\r\n                    <input type=\"email\" id=\"email\"\r\n                        //aria-describedby=\"emailHelp\" \r\n                        name=\"email\"\r\n                        onChange={handleInputChange} value={email}\r\n                    />\r\n                    {\r\n                        submitStatus.emailMessage ?\r\n                            (\r\n                                <p>{submitStatus.emailMessage}</p>\r\n                            ) :\r\n                            (\r\n                                ''\r\n                            )\r\n                    }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\" className=\"d-block\">Senha</label>\r\n                    <input type=\"password\" id=\"password\" name=\"password\"\r\n                        onChange={handleInputChange} value={password} />\r\n                    {\r\n                        submitStatus.passwordMessage ?\r\n                            (\r\n                                <p>{submitStatus.passwordMessage}</p>\r\n                            ) :\r\n                            (\r\n                                ''\r\n                            )\r\n                    }\r\n                </div>\r\n                <button type=\"submit\">\r\n                    {\r\n                        submitStatus.loading ?\r\n                            (\r\n                                <>\r\n                                    <Loading />\r\n                                </>\r\n                            ) : (\r\n                                'CADASTRAR'\r\n                            )\r\n                    }\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n"]},"metadata":{},"sourceType":"module"}