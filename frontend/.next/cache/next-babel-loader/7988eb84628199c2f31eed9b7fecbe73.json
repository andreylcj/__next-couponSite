{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const userDataActionUpdate = dataUpdate => async dispatch => {\n  dispatch({\n    type: 'UPDATE_USER_DATA',\n    payload: dataUpdate\n  });\n};\nexport const userDataReducer = (state = {\n  userData: {\n    email: '',\n    password: ''\n  }\n}, action) => {\n  console.log(action.payload);\n\n  switch (action.type) {\n    case 'UPDATE_USER_DATA':\n      return _objectSpread(_objectSpread({}, state.userData), action.payload);\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/Andrey luiz/Desktop/NextJS/next_project/frontend/redux_store/UserData.js"],"names":["userDataActionUpdate","dataUpdate","dispatch","type","payload","userDataReducer","state","userData","email","password","action","console","log"],"mappings":";;;;;;AACA,OAAO,MAAMA,oBAAoB,GAAIC,UAAD,IAAgB,MAAOC,QAAP,IAAoB;AACpEA,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAE,kBADD;AAELC,IAAAA,OAAO,EAAEH;AAFJ,GAAD,CAAR;AAIH,CALM;AAOP,OAAO,MAAMI,eAAe,GAAG,CAACC,KAAK,GACjC;AACIC,EAAAA,QAAQ,EACJ;AAAEC,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,QAAQ,EAAE;AAAvB;AAFR,CAD2B,EAIxBC,MAJwB,KAIb;AACdC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACN,OAAnB;;AACA,UAAQM,MAAM,CAACP,IAAf;AACI,SAAK,kBAAL;AACI,6CACOG,KAAK,CAACC,QADb,GAEOG,MAAM,CAACN,OAFd;;AAIJ;AACI,aAAOE,KAAP;AAPR;AASH,CAfM","sourcesContent":["\r\nexport const userDataActionUpdate = (dataUpdate) => async (dispatch) => {\r\n    dispatch({\r\n        type: 'UPDATE_USER_DATA',\r\n        payload: dataUpdate\r\n    });\r\n}\r\n\r\nexport const userDataReducer = (state =\r\n    {\r\n        userData:\r\n            { email: '', password: '' }\r\n    }, action) => {\r\n    console.log(action.payload)\r\n    switch (action.type) {\r\n        case 'UPDATE_USER_DATA':\r\n            return {\r\n                ...state.userData,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}