{"ast":null,"code":"import Axios from 'axios';\nimport { TOP_CATEGORIES_FAIL, TOP_CATEGORIES_REQUEST, TOP_CATEGORIES_SUCCESS } from '../Constants';\nconst baseURL = process.env.BASE_URL;\nexport const listTopCategoriesAction = apiURL => async dispatch => {\n  dispatch({\n    type: TOP_CATEGORIES_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`${baseURL}${apiURL}`);\n    dispatch({\n      type: TOP_CATEGORIES_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: TOP_CATEGORIES_FAIL,\n      payload: error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Andrey luiz/Desktop/NextJS/next_project/frontend/redux_store/actions/TopCategoriesAction.js"],"names":["Axios","TOP_CATEGORIES_FAIL","TOP_CATEGORIES_REQUEST","TOP_CATEGORIES_SUCCESS","baseURL","process","env","BASE_URL","listTopCategoriesAction","apiURL","dispatch","type","data","get","payload","error","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,EAA8BC,sBAA9B,EAAsDC,sBAAtD,QAAoF,cAApF;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAA5B;AAEA,OAAO,MAAMC,uBAAuB,GAAIC,MAAD,IAAY,MAAOC,QAAP,IAAoB;AACnEA,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAET;AADD,GAAD,CAAR;;AAGA,MAAI;AACA,UAAM;AAAEU,MAAAA;AAAF,QAAW,MAAMZ,KAAK,CAACa,GAAN,CAAW,GAAET,OAAQ,GAAEK,MAAO,EAA9B,CAAvB;AACAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,sBAAR;AAAgCW,MAAAA,OAAO,EAAEF;AAAzC,KAAD,CAAR;AACH,GAHD,CAGE,OAAOG,KAAP,EAAc;AACZL,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEV,mBAAR;AAA6Ba,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAA5C,KAAD,CAAR;AACH;AACJ,CAVM","sourcesContent":["import Axios from 'axios'\r\nimport { TOP_CATEGORIES_FAIL, TOP_CATEGORIES_REQUEST, TOP_CATEGORIES_SUCCESS } from '../Constants';\r\n\r\nconst baseURL = process.env.BASE_URL\r\n\r\nexport const listTopCategoriesAction = (apiURL) => async (dispatch) => {\r\n    dispatch({\r\n        type: TOP_CATEGORIES_REQUEST\r\n    });\r\n    try {\r\n        const { data } = await Axios.get(`${baseURL}${apiURL}`);\r\n        dispatch({ type: TOP_CATEGORIES_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        dispatch({ type: TOP_CATEGORIES_FAIL, payload: error.message })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}