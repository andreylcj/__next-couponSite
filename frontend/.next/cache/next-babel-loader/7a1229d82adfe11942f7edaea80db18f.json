{"ast":null,"code":"const validRegister = (email, password) => {\n  if (!email && !password) return {\n    emailMessage: '',\n    passwordMessage: '',\n    emailIsOk: true,\n    passwordIsOk: true\n  };\n  if (!email) return {\n    emptyEmail: true,\n    msg: 'Empty email'\n  };\n  if (!password) return {\n    emptyPassword: true,\n    msg: 'Empty Password'\n  };\n\n  if (!validateEmail(email)) {\n    return {\n      invalidEmail: true,\n      msg: 'Invalid email'\n    };\n  }\n\n  if (password.length < 6) {\n    return {\n      invalidPassword: true,\n      msg: 'Invalid Password'\n    };\n  }\n\n  return true;\n};\n\nfunction validateEmail(email) {\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}\n\nexport default validRegister;","map":{"version":3,"sources":["C:/Users/Andrey luiz/Desktop/NextJS/next_project/frontend/assets/utils/ValidRegister.js"],"names":["validRegister","email","password","emailMessage","passwordMessage","emailIsOk","passwordIsOk","emptyEmail","msg","emptyPassword","validateEmail","invalidEmail","length","invalidPassword","re","test","String","toLowerCase"],"mappings":"AAAA,MAAMA,aAAa,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAEvC,MAAI,CAACD,KAAD,IAAU,CAACC,QAAf,EACI,OAAO;AACHC,IAAAA,YAAY,EAAE,EADX;AAEHC,IAAAA,eAAe,EAAE,EAFd;AAGHC,IAAAA,SAAS,EAAE,IAHR;AAIHC,IAAAA,YAAY,EAAE;AAJX,GAAP;AAOJ,MAAI,CAACL,KAAL,EACI,OAAO;AACHM,IAAAA,UAAU,EAAE,IADT;AAEHC,IAAAA,GAAG,EAAE;AAFF,GAAP;AAKJ,MAAI,CAACN,QAAL,EACI,OAAO;AACHO,IAAAA,aAAa,EAAE,IADZ;AAEHD,IAAAA,GAAG,EAAE;AAFF,GAAP;;AAMJ,MAAI,CAACE,aAAa,CAACT,KAAD,CAAlB,EAA2B;AACvB,WAAO;AACHU,MAAAA,YAAY,EAAE,IADX;AAEHH,MAAAA,GAAG,EAAE;AAFF,KAAP;AAIH;;AAED,MAAIN,QAAQ,CAACU,MAAT,GAAkB,CAAtB,EAAyB;AACrB,WAAO;AACHC,MAAAA,eAAe,EAAE,IADd;AAEHL,MAAAA,GAAG,EAAE;AAFF,KAAP;AAIH;;AAED,SAAO,IAAP;AAGH,CAxCD;;AA0CA,SAASE,aAAT,CAAuBT,KAAvB,EAA8B;AAC1B,QAAMa,EAAE,GAAG,uJAAX;AACA,SAAOA,EAAE,CAACC,IAAH,CAAQC,MAAM,CAACf,KAAD,CAAN,CAAcgB,WAAd,EAAR,CAAP;AACH;;AAED,eAAejB,aAAf","sourcesContent":["const validRegister = (email, password) => {\r\n\r\n    if (!email && !password)\r\n        return {\r\n            emailMessage: '',\r\n            passwordMessage: '',\r\n            emailIsOk: true,\r\n            passwordIsOk: true,\r\n        }\r\n\r\n    if (!email)\r\n        return {\r\n            emptyEmail: true,\r\n            msg: 'Empty email',\r\n        }\r\n\r\n    if (!password)\r\n        return {\r\n            emptyPassword: true,\r\n            msg: 'Empty Password',\r\n        }\r\n\r\n\r\n    if (!validateEmail(email)) {\r\n        return {\r\n            invalidEmail: true,\r\n            msg: 'Invalid email',\r\n        }\r\n    }\r\n\r\n    if (password.length < 6) {\r\n        return {\r\n            invalidPassword: true,\r\n            msg: 'Invalid Password',\r\n        }\r\n    }\r\n\r\n    return true\r\n\r\n\r\n}\r\n\r\nfunction validateEmail(email) {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n}\r\n\r\nexport default validRegister"]},"metadata":{},"sourceType":"module"}