{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { getData } from '../../assets/utils/fetchData';\nimport { TOP_CATEGORIES_FAIL, TOP_CATEGORIES_REQUEST, TOP_CATEGORIES_SUCCESS } from '../Constants';\nvar baseURL = process.env.BASE_URL;\nexport var listTopCategoriesAction = function listTopCategoriesAction(apiURL) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch({\n                type: TOP_CATEGORIES_REQUEST\n              });\n              _context.prev = 1;\n              _context.next = 4;\n              return getData(apiURL);\n\n            case 4:\n              data = _context.sent;\n              dispatch({\n                type: TOP_CATEGORIES_SUCCESS,\n                payload: data\n              });\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              dispatch({\n                type: TOP_CATEGORIES_FAIL,\n                payload: _context.t0.message\n              });\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 8]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var listTopCategoriesReducer = function listTopCategoriesReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    loading: true,\n    topCategories: []\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TOP_CATEGORIES_REQUEST:\n      return {\n        loading: true,\n        topCategories: []\n      };\n\n    case TOP_CATEGORIES_SUCCESS:\n      return {\n        loading: false,\n        topCategories: action.payload\n      };\n\n    case TOP_CATEGORIES_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n        topCategories: []\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/Andrey luiz/Desktop/NextJS/next_project/frontend/redux_store/TopCategories.js"],"names":["getData","TOP_CATEGORIES_FAIL","TOP_CATEGORIES_REQUEST","TOP_CATEGORIES_SUCCESS","baseURL","process","env","BASE_URL","listTopCategoriesAction","apiURL","dispatch","type","data","payload","message","listTopCategoriesReducer","state","loading","topCategories","action","error"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,8BAAxB;AACA,SAASC,mBAAT,EAA8BC,sBAA9B,EAAsDC,sBAAtD,QAAoF,cAApF;AAEA,IAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAA5B;AAEA,OAAO,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,MAAD;AAAA;AAAA,wEAAY,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAC/CA,cAAAA,QAAQ,CAAC;AACLC,gBAAAA,IAAI,EAAET;AADD,eAAD,CAAR;AAD+C;AAAA;AAAA,qBAKxBF,OAAO,CAACS,MAAD,CALiB;;AAAA;AAKrCG,cAAAA,IALqC;AAM3CF,cAAAA,QAAQ,CAAC;AAAEC,gBAAAA,IAAI,EAAER,sBAAR;AAAgCU,gBAAAA,OAAO,EAAED;AAAzC,eAAD,CAAR;AAN2C;AAAA;;AAAA;AAAA;AAAA;AAQ3CF,cAAAA,QAAQ,CAAC;AAAEC,gBAAAA,IAAI,EAAEV,mBAAR;AAA6BY,gBAAAA,OAAO,EAAE,YAAMC;AAA5C,eAAD,CAAR;;AAR2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAZ;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhC;AAYP,OAAO,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,GAA0D;AAAA,MAAzDC,KAAyD,uEAAjD;AAAEC,IAAAA,OAAO,EAAE,IAAX;AAAiBC,IAAAA,aAAa,EAAE;AAAhC,GAAiD;AAAA,MAAXC,MAAW;;AAC9F,UAAQA,MAAM,CAACR,IAAf;AACI,SAAKT,sBAAL;AACI,aAAO;AAAEe,QAAAA,OAAO,EAAE,IAAX;AAAiBC,QAAAA,aAAa,EAAE;AAAhC,OAAP;;AACJ,SAAKf,sBAAL;AACI,aAAO;AAAEc,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,aAAa,EAAEC,MAAM,CAACN;AAAxC,OAAP;;AACJ,SAAKZ,mBAAL;AACI,aAAO;AAAEgB,QAAAA,OAAO,EAAE,KAAX;AAAkBG,QAAAA,KAAK,EAAED,MAAM,CAACN,OAAhC;AAAyCK,QAAAA,aAAa,EAAE;AAAxD,OAAP;;AACJ;AACI,aAAOF,KAAP;AARR;AAUH,CAXM","sourcesContent":["import { getData } from '../../assets/utils/fetchData';\r\nimport { TOP_CATEGORIES_FAIL, TOP_CATEGORIES_REQUEST, TOP_CATEGORIES_SUCCESS } from '../Constants';\r\n\r\nconst baseURL = process.env.BASE_URL\r\n\r\nexport const listTopCategoriesAction = (apiURL) => async (dispatch) => {\r\n    dispatch({\r\n        type: TOP_CATEGORIES_REQUEST\r\n    });\r\n    try {\r\n        const data = await getData(apiURL);\r\n        dispatch({ type: TOP_CATEGORIES_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        dispatch({ type: TOP_CATEGORIES_FAIL, payload: error.message })\r\n    }\r\n}\r\n\r\nexport const listTopCategoriesReducer = (state = { loading: true, topCategories: [] }, action) => {\r\n    switch (action.type) {\r\n        case TOP_CATEGORIES_REQUEST:\r\n            return { loading: true, topCategories: [] }\r\n        case TOP_CATEGORIES_SUCCESS:\r\n            return { loading: false, topCategories: action.payload }\r\n        case TOP_CATEGORIES_FAIL:\r\n            return { loading: false, error: action.payload, topCategories: [] }\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}