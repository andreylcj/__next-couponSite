{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Andrey luiz\\\\Desktop\\\\NextJS\\\\next_project\\\\frontend\\\\pages\\\\entrar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport Loading from '../snnipets/Loading';\nimport validLogin from '../assets/utils/ValidLogin';\nimport { postData } from '../assets/utils/fetchData';\nimport Link from 'next/link';\nimport Cookie from 'js-cookie';\nimport { DataContext } from '../store/GlobalState';\nimport ACTION from '../store/Constants';\n\nfunction Register() {\n  _s();\n\n  var _useContext = useContext(DataContext),\n      state = _useContext[0],\n      dispatch = _useContext[1];\n\n  var loading = state.loadingRegisterAndLoginReduxStore.loading;\n  var userData = state.userDataRedux.userData;\n\n  var _useState = useState({\n    emailMessage: '',\n    passwordMessage: ''\n  }),\n      submitStatus = _useState[0],\n      setSubmitStatus = _useState[1];\n\n  var email = userData.email,\n      password = userData.password;\n\n  var handleInputChange = function handleInputChange(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    dispatch({\n      type: ACTION.UPDATE_USER_DATA,\n      payload: _defineProperty({}, name, value)\n    });\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var _validLogin, emailMessage, passwordMessage, res;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _validLogin = validLogin(userData.email, userData.password), emailMessage = _validLogin.emailMessage, passwordMessage = _validLogin.passwordMessage;\n              setSubmitStatus({\n                emailMessage: emailMessage,\n                passwordMessage: passwordMessage\n              });\n\n              if (!(emailMessage || passwordMessage)) {\n                _context.next = 5;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 5:\n              dispatch({\n                type: ACTION.START_LOADING\n              });\n              _context.next = 8;\n              return postData('/api/auth/login', userData);\n\n            case 8:\n              res = _context.sent;\n              dispatch({\n                type: ACTION.END_LOADING\n              });\n              setSubmitStatus({\n                emailNotExist: res.emailMessage,\n                wrongPassword: res.passwordMessage\n              });\n\n              if (!(res.emailMessage || res.passwordMessage)) {\n                _context.next = 13;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 13:\n              Cookie.set('refreshToken', res.refreshToken, {\n                path: '/api/auth/accessToken',\n                expires: 25\n              });\n              localStorage.setItem('firstLogin', true);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container text-center p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"d-block\",\n      onSubmit: handleSubmit,\n      noValidate: true,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          className: \"d-block\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\" //aria-describedby=\"emailHelp\" \n          ,\n          name: \"email\",\n          onChange: handleInputChange,\n          value: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), submitStatus.emailMessage ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: submitStatus.emailMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 33\n        }, this) : submitStatus.emailNotExist ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [submitStatus.emailNotExist, \". Deseja se \", /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/registrar\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              onClick: function onClick() {\n                return dispatch({\n                  type: ACTION.UPDATE_USER_DATA,\n                  payload: {\n                    paasword: \"\"\n                  }\n                });\n              },\n              children: \"cadastrar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 51\n          }, this), \"?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 37\n        }, this) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: \"d-block\",\n          children: \"Senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          onChange: handleInputChange,\n          value: password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), submitStatus.passwordMessage ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: submitStatus.passwordMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 33\n        }, this) : submitStatus.wrongPassword ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: submitStatus.wrongPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 37\n        }, this) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 37\n          }, this)\n        }, void 0, false) : 'ENTRAR'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Register, \"d1M/HUGDIUuENT9/opuoz6EFXPo=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/Andrey luiz/Desktop/NextJS/next_project/frontend/pages/entrar.js"],"names":["React","useState","useContext","Loading","validLogin","postData","Link","Cookie","DataContext","ACTION","Register","state","dispatch","loading","loadingRegisterAndLoginReduxStore","userData","userDataRedux","emailMessage","passwordMessage","submitStatus","setSubmitStatus","email","password","handleInputChange","e","target","name","value","type","UPDATE_USER_DATA","payload","handleSubmit","preventDefault","START_LOADING","res","END_LOADING","emailNotExist","wrongPassword","set","refreshToken","path","expires","localStorage","setItem","paasword"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react'\r\nimport Loading from '../snnipets/Loading'\r\nimport validLogin from '../assets/utils/ValidLogin';\r\nimport { postData } from '../assets/utils/fetchData';\r\nimport Link from 'next/link'\r\nimport Cookie from 'js-cookie'\r\n\r\nimport { DataContext } from '../store/GlobalState'\r\nimport ACTION from '../store/Constants'\r\n\r\nfunction Register() {\r\n\r\n    const [state, dispatch] = useContext(DataContext);\r\n    const { loading } = state.loadingRegisterAndLoginReduxStore\r\n    const { userData } = state.userDataRedux\r\n\r\n    const [submitStatus, setSubmitStatus] = useState({\r\n        emailMessage: '',\r\n        passwordMessage: '',\r\n    })\r\n\r\n    const { email, password } = userData\r\n\r\n    const handleInputChange = e => {\r\n        const { name, value } = e.target\r\n        dispatch({\r\n            type: ACTION.UPDATE_USER_DATA,\r\n            payload: { [name]: value }\r\n        });\r\n    }\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault()\r\n\r\n        const { emailMessage, passwordMessage } = validLogin(userData.email, userData.password)\r\n\r\n        setSubmitStatus({\r\n            emailMessage: emailMessage,\r\n            passwordMessage: passwordMessage,\r\n        })\r\n\r\n        if (emailMessage || passwordMessage) {\r\n            return\r\n        }\r\n\r\n        dispatch({ type: ACTION.START_LOADING, });\r\n        const res = await postData('/api/auth/login', userData);\r\n        dispatch({ type: ACTION.END_LOADING, });\r\n\r\n        setSubmitStatus({\r\n            emailNotExist: res.emailMessage,\r\n            wrongPassword: res.passwordMessage,\r\n        })\r\n\r\n        if (res.emailMessage || res.passwordMessage)\r\n            return\r\n\r\n        Cookie.set('refreshToken', res.refreshToken, {\r\n            path: '/api/auth/accessToken',\r\n            expires: 25\r\n        })\r\n        localStorage.setItem('firstLogin', true)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container text-center p-4\">\r\n            <form className=\"d-block\" onSubmit={handleSubmit} noValidate>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"email\" className=\"d-block\">Email</label>\r\n                    <input type=\"email\" id=\"email\"\r\n                        //aria-describedby=\"emailHelp\" \r\n                        name=\"email\"\r\n                        onChange={handleInputChange} value={email}\r\n                    />\r\n                    {\r\n                        submitStatus.emailMessage ?\r\n                            (\r\n                                <p>{submitStatus.emailMessage}</p>\r\n                            ) : submitStatus.emailNotExist ?\r\n                                (\r\n                                    <p>\r\n                                        {submitStatus.emailNotExist}.\r\n                                        Deseja se <Link href=\"/registrar\">\r\n                                            <a\r\n                                                onClick={() => dispatch({ type: ACTION.UPDATE_USER_DATA, payload: { paasword: \"\" } })}\r\n                                            >\r\n                                                cadastrar\r\n                                                </a>\r\n                                        </Link>?\r\n                                    </p>\r\n                                ) : (\r\n                                    ''\r\n                                )\r\n                    }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\" className=\"d-block\">Senha</label>\r\n                    <input type=\"password\" id=\"password\" name=\"password\"\r\n                        onChange={handleInputChange} value={password} />\r\n                    {\r\n                        submitStatus.passwordMessage ?\r\n                            (\r\n                                <p>{submitStatus.passwordMessage}</p>\r\n                            ) : submitStatus.wrongPassword ?\r\n                                (\r\n                                    <p>{submitStatus.wrongPassword}</p>\r\n                                ) :\r\n                                (\r\n                                    ''\r\n                                )\r\n                    }\r\n                </div>\r\n                <button type=\"submit\">\r\n                    {\r\n                        loading ?\r\n                            (\r\n                                <>\r\n                                    <Loading />\r\n                                </>\r\n                            ) : (\r\n                                'ENTRAR'\r\n                            )\r\n                    }\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n"]},"metadata":{},"sourceType":"module"}