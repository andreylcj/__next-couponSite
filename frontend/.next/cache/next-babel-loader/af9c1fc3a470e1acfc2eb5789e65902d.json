{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { getData } from '../assets/utils/fetchData';\nimport { CATEGORY_TITLE_FAIL, CATEGORY_TITLE_REQUEST, CATEGORY_TITLE_SUCCESS } from './Constants';\nvar baseURL = process.env.BASE_URL;\nexport var categoryAction = function categoryAction(category_hiffen_name) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch({\n                type: CATEGORY_TITLE_REQUEST,\n                payload: category_hiffen_name\n              });\n              _context.prev = 1;\n              _context.next = 4;\n              return getData(category_hiffen_name);\n\n            case 4:\n              data = _context.sent;\n              dispatch({\n                type: CATEGORY_TITLE_SUCCESS,\n                payload: data\n              });\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              dispatch({\n                type: CATEGORY_TITLE_FAIL,\n                payload: _context.t0.response && _context.t0.response.data.message ? _context.t0.response.data.message : _context.t0.message\n              });\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 8]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var categoryReducer = function categoryReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    loading: true,\n    categoryRedux: {}\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CATEGORY_TITLE_REQUEST:\n      return {\n        loading: true,\n        categoryRedux: {}\n      };\n\n    case CATEGORY_TITLE_SUCCESS:\n      return {\n        loading: false,\n        categoryRedux: action.payload\n      };\n\n    case CATEGORY_TITLE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n        categoryRedux: {}\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/Andrey luiz/Desktop/NextJS/next_project/frontend/redux_store/Category.js"],"names":["getData","CATEGORY_TITLE_FAIL","CATEGORY_TITLE_REQUEST","CATEGORY_TITLE_SUCCESS","baseURL","process","env","BASE_URL","categoryAction","category_hiffen_name","dispatch","type","payload","data","response","message","categoryReducer","state","loading","categoryRedux","action","error"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,2BAAxB;AACA,SAASC,mBAAT,EAA8BC,sBAA9B,EAAsDC,sBAAtD,QAAoF,aAApF;AAGA,IAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAA5B;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,oBAAD;AAAA;AAAA,wEAA0B,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACpDA,cAAAA,QAAQ,CAAC;AACLC,gBAAAA,IAAI,EAAET,sBADD;AACyBU,gBAAAA,OAAO,EAAEH;AADlC,eAAD,CAAR;AADoD;AAAA;AAAA,qBAK7BT,OAAO,CAACS,oBAAD,CALsB;;AAAA;AAK1CI,cAAAA,IAL0C;AAMhDH,cAAAA,QAAQ,CAAC;AAAEC,gBAAAA,IAAI,EAAER,sBAAR;AAAgCS,gBAAAA,OAAO,EAAEC;AAAzC,eAAD,CAAR;AANgD;AAAA;;AAAA;AAAA;AAAA;AAQhDH,cAAAA,QAAQ,CAAC;AACLC,gBAAAA,IAAI,EAAEV,mBADD;AAELW,gBAAAA,OAAO,EACH,YAAME,QAAN,IAAkB,YAAMA,QAAN,CAAeD,IAAf,CAAoBE,OAAtC,GACI,YAAMD,QAAN,CAAeD,IAAf,CAAoBE,OADxB,GACkC,YAAMA;AAJvC,eAAD,CAAR;;AARgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA1B;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;AAiBP,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAA0D;AAAA,MAAzDC,KAAyD,uEAAjD;AAAEC,IAAAA,OAAO,EAAE,IAAX;AAAiBC,IAAAA,aAAa,EAAE;AAAhC,GAAiD;AAAA,MAAXC,MAAW;;AACrF,UAAQA,MAAM,CAACT,IAAf;AACI,SAAKT,sBAAL;AACI,aAAO;AAAEgB,QAAAA,OAAO,EAAE,IAAX;AAAiBC,QAAAA,aAAa,EAAE;AAAhC,OAAP;;AACJ,SAAKhB,sBAAL;AACI,aAAO;AAAEe,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,aAAa,EAAEC,MAAM,CAACR;AAAxC,OAAP;;AACJ,SAAKX,mBAAL;AACI,aAAO;AAAEiB,QAAAA,OAAO,EAAE,KAAX;AAAkBG,QAAAA,KAAK,EAAED,MAAM,CAACR,OAAhC;AAAyCO,QAAAA,aAAa,EAAE;AAAxD,OAAP;;AACJ;AACI,aAAOF,KAAP;AARR;AAUH,CAXM","sourcesContent":["import { getData } from '../assets/utils/fetchData';\r\nimport { CATEGORY_TITLE_FAIL, CATEGORY_TITLE_REQUEST, CATEGORY_TITLE_SUCCESS } from './Constants';\r\n\r\n\r\nconst baseURL = process.env.BASE_URL\r\n\r\nexport const categoryAction = (category_hiffen_name) => async (dispatch) => {\r\n    dispatch({\r\n        type: CATEGORY_TITLE_REQUEST, payload: category_hiffen_name\r\n    });\r\n    try {\r\n        const data = await getData(category_hiffen_name);\r\n        dispatch({ type: CATEGORY_TITLE_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CATEGORY_TITLE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message ?\r\n                    error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const categoryReducer = (state = { loading: true, categoryRedux: {} }, action) => {\r\n    switch (action.type) {\r\n        case CATEGORY_TITLE_REQUEST:\r\n            return { loading: true, categoryRedux: {} }\r\n        case CATEGORY_TITLE_SUCCESS:\r\n            return { loading: false, categoryRedux: action.payload }\r\n        case CATEGORY_TITLE_FAIL:\r\n            return { loading: false, error: action.payload, categoryRedux: {} }\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}