{"ast":null,"code":"import ConnectDB from '../../../assets/utils/ConnectDB';\nimport bcrypt from 'bcrypt';\nimport Users from '../../../assets/models/UserModel';\nConnectDB();\nexport default (async (req, res) => {\n  switch (req.method) {\n    case 'POST':\n      await login(req, res);\n      break;\n  }\n});\n\nconst login = async (req, res) => {\n  try {\n    const {\n      email,\n      password\n    } = req.body;\n    const user = await Users.findOne({\n      email\n    });\n    if (!user) return res.status(400).json({\n      emailMessage: 'Esse email não está cadastrado'\n    });\n    const isMatch = await bcrypt.compare(password, user.password);\n    if (!isMatch) return res.status(400).json({\n      passwordMessage: 'Senha incorreta'\n    });\n    console.log(user);\n    res.json({\n      msg: 'Login Success'\n    });\n  } catch (err) {\n    return res.status(500).json({\n      err: err.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Andrey luiz/Desktop/NextJS/next_project/frontend/pages/api/auth/login.js"],"names":["ConnectDB","bcrypt","Users","req","res","method","login","email","password","body","user","findOne","status","json","emailMessage","isMatch","compare","passwordMessage","console","log","msg","err","message"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,iCAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,kCAAlB;AAGAF,SAAS;AAET,gBAAe,OAAOG,GAAP,EAAYC,GAAZ,KAAoB;AAC/B,UAAQD,GAAG,CAACE,MAAZ;AACI,SAAK,MAAL;AACI,YAAMC,KAAK,CAACH,GAAD,EAAMC,GAAN,CAAX;AACA;AAHR;AAKH,CAND;;AAQA,MAAME,KAAK,GAAG,OAAOH,GAAP,EAAYC,GAAZ,KAAoB;AAC9B,MAAI;AAEA,UAAM;AAAEG,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsBL,GAAG,CAACM,IAAhC;AAEA,UAAMC,IAAI,GAAG,MAAMR,KAAK,CAACS,OAAN,CAAc;AAAEJ,MAAAA;AAAF,KAAd,CAAnB;AACA,QAAI,CAACG,IAAL,EAAW,OAAON,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,YAAY,EAAE;AAAhB,KAArB,CAAP;AAEX,UAAMC,OAAO,GAAG,MAAMd,MAAM,CAACe,OAAP,CAAeR,QAAf,EAAyBE,IAAI,CAACF,QAA9B,CAAtB;AACA,QAAI,CAACO,OAAL,EAAc,OAAOX,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEI,MAAAA,eAAe,EAAE;AAAnB,KAArB,CAAP;AAEdC,IAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AACAN,IAAAA,GAAG,CAACS,IAAJ,CAAS;AAAEO,MAAAA,GAAG,EAAE;AAAP,KAAT;AAEH,GAbD,CAaE,OAAOC,GAAP,EAAY;AACV,WAAOjB,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEQ,MAAAA,GAAG,EAAEA,GAAG,CAACC;AAAX,KAArB,CAAP;AACH;AACJ,CAjBD","sourcesContent":["import ConnectDB from '../../../assets/utils/ConnectDB'\r\nimport bcrypt from 'bcrypt'\r\nimport Users from '../../../assets/models/UserModel'\r\n\r\n\r\nConnectDB()\r\n\r\nexport default async (req, res) => {\r\n    switch (req.method) {\r\n        case 'POST':\r\n            await login(req, res)\r\n            break\r\n    }\r\n}\r\n\r\nconst login = async (req, res) => {\r\n    try {\r\n\r\n        const { email, password } = req.body\r\n\r\n        const user = await Users.findOne({ email })\r\n        if (!user) return res.status(400).json({ emailMessage: 'Esse email não está cadastrado' })\r\n\r\n        const isMatch = await bcrypt.compare(password, user.password)\r\n        if (!isMatch) return res.status(400).json({ passwordMessage: 'Senha incorreta' })\r\n\r\n        console.log(user)\r\n        res.json({ msg: 'Login Success' })\r\n\r\n    } catch (err) {\r\n        return res.status(500).json({ err: err.message })\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}