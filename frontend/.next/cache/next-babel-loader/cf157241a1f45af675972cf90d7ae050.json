{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Andrey luiz\\\\Desktop\\\\NextJS\\\\next_project\\\\frontend\\\\pages\\\\entrar.js\";\nimport React, { useState } from 'react';\nimport Loading from '../snnipets/Loading';\nimport { useDispatch, useSelector } from 'react-redux';\nimport validLogin from '../assets/utils/ValidLogin';\nimport { loadingActionEnd, loadingActionStart } from '../redux_store/LoadingRegisterAndLogin';\nimport { postData } from '../assets/utils/fetchData';\nimport Link from 'next/link';\nimport { userDataActionUpdate } from '../redux_store/UserData';\nimport Cookie from 'js-cookie';\n\nfunction Register() {\n  const dispatch = useDispatch();\n  const {\n    loading\n  } = useSelector(state => state).loadingRegisterAndLoginReduxStore;\n  const {\n    userData\n  } = useSelector(state => state).userDataRedux;\n  const {\n    0: submitStatus,\n    1: setSubmitStatus\n  } = useState({\n    emailMessage: '',\n    passwordMessage: ''\n  });\n  const {\n    email,\n    password\n  } = userData;\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    dispatch(userDataActionUpdate({\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      emailMessage,\n      passwordMessage\n    } = validLogin(userData.email, userData.password);\n    setSubmitStatus({\n      emailMessage: emailMessage,\n      passwordMessage: passwordMessage\n    });\n\n    if (emailMessage || passwordMessage) {\n      return;\n    }\n\n    dispatch(loadingActionStart());\n    const data = await postData('/api/auth/login', userData);\n    dispatch(loadingActionEnd());\n    setSubmitStatus({\n      emailNotExist: data.emailMessage,\n      wrongPassword: data.passwordMessage\n    });\n    if (data.emailMessage || data.passwordMessage) return;\n    console.log('ok');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container text-center p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"d-block\",\n      onSubmit: handleSubmit,\n      noValidate: true,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          className: \"d-block\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\" //aria-describedby=\"emailHelp\" \n          ,\n          name: \"email\",\n          onChange: handleInputChange,\n          value: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), submitStatus.emailMessage ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: submitStatus.emailMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 33\n        }, this) : submitStatus.emailNotExist ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [submitStatus.emailNotExist, \". Deseja se \", /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/registrar\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: \"cadastrar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 75\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 51\n          }, this), \"?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 37\n        }, this) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: \"d-block\",\n          children: \"Senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          onChange: handleInputChange,\n          value: password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), submitStatus.passwordMessage ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: submitStatus.passwordMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 33\n        }, this) : submitStatus.wrongPassword ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: submitStatus.wrongPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 37\n        }, this) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 37\n          }, this)\n        }, void 0, false) : 'ENTRAR'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\nexport default Register;","map":{"version":3,"sources":["C:/Users/Andrey luiz/Desktop/NextJS/next_project/frontend/pages/entrar.js"],"names":["React","useState","Loading","useDispatch","useSelector","validLogin","loadingActionEnd","loadingActionStart","postData","Link","userDataActionUpdate","Cookie","Register","dispatch","loading","state","loadingRegisterAndLoginReduxStore","userData","userDataRedux","submitStatus","setSubmitStatus","emailMessage","passwordMessage","email","password","handleInputChange","e","name","value","target","handleSubmit","preventDefault","data","emailNotExist","wrongPassword","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport Loading from '../snnipets/Loading'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport validLogin from '../assets/utils/ValidLogin';\r\nimport { loadingActionEnd, loadingActionStart } from '../redux_store/LoadingRegisterAndLogin';\r\nimport { postData } from '../assets/utils/fetchData';\r\nimport Link from 'next/link'\r\nimport { userDataActionUpdate } from '../redux_store/UserData';\r\nimport Cookie from 'js-cookie'\r\n\r\nfunction Register() {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const { loading } = useSelector(state => state).loadingRegisterAndLoginReduxStore\r\n    const { userData } = useSelector(state => state).userDataRedux\r\n    const [submitStatus, setSubmitStatus] = useState({\r\n        emailMessage: '',\r\n        passwordMessage: '',\r\n    })\r\n\r\n    const { email, password } = userData\r\n\r\n    const handleInputChange = e => {\r\n        const { name, value } = e.target\r\n        dispatch(userDataActionUpdate({ [name]: value }))\r\n    }\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault()\r\n\r\n        const { emailMessage, passwordMessage } = validLogin(userData.email, userData.password)\r\n\r\n        setSubmitStatus({\r\n            emailMessage: emailMessage,\r\n            passwordMessage: passwordMessage,\r\n        })\r\n\r\n        if (emailMessage || passwordMessage) {\r\n            return\r\n        }\r\n\r\n        dispatch(loadingActionStart())\r\n\r\n        const data = await postData('/api/auth/login', userData);\r\n\r\n        dispatch(loadingActionEnd())\r\n\r\n        setSubmitStatus({\r\n            emailNotExist: data.emailMessage,\r\n            wrongPassword: data.passwordMessage,\r\n        })\r\n\r\n        if (data.emailMessage || data.passwordMessage)\r\n            return\r\n\r\n        console.log('ok')\r\n    }\r\n\r\n    return (\r\n        <div className=\"container text-center p-4\">\r\n            <form className=\"d-block\" onSubmit={handleSubmit} noValidate>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"email\" className=\"d-block\">Email</label>\r\n                    <input type=\"email\" id=\"email\"\r\n                        //aria-describedby=\"emailHelp\" \r\n                        name=\"email\"\r\n                        onChange={handleInputChange} value={email}\r\n                    />\r\n                    {\r\n                        submitStatus.emailMessage ?\r\n                            (\r\n                                <p>{submitStatus.emailMessage}</p>\r\n                            ) : submitStatus.emailNotExist ?\r\n                                (\r\n                                    <p>\r\n                                        {submitStatus.emailNotExist}.\r\n                                        Deseja se <Link href=\"/registrar\"><a>cadastrar</a></Link>?\r\n                                    </p>\r\n                                ) : (\r\n                                    ''\r\n                                )\r\n                    }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\" className=\"d-block\">Senha</label>\r\n                    <input type=\"password\" id=\"password\" name=\"password\"\r\n                        onChange={handleInputChange} value={password} />\r\n                    {\r\n                        submitStatus.passwordMessage ?\r\n                            (\r\n                                <p>{submitStatus.passwordMessage}</p>\r\n                            ) : submitStatus.wrongPassword ?\r\n                                (\r\n                                    <p>{submitStatus.wrongPassword}</p>\r\n                                ) :\r\n                                (\r\n                                    ''\r\n                                )\r\n                    }\r\n                </div>\r\n                <button type=\"submit\">\r\n                    {\r\n                        loading ?\r\n                            (\r\n                                <>\r\n                                    <Loading />\r\n                                </>\r\n                            ) : (\r\n                                'ENTRAR'\r\n                            )\r\n                    }\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n"]},"metadata":{},"sourceType":"module"}