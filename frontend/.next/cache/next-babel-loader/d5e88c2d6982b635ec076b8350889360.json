{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Andrey luiz\\\\Desktop\\\\NextJS\\\\next_project\\\\frontend\\\\pages\\\\registrar.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { postData } from '../assets/utils/fetchData';\nimport validRegister from '../assets/utils/ValidRegister';\nimport { registerAction } from '../redux_store/actions/RegisterAction';\nimport Loading from '../snnipets/Loading';\nimport { useDispatch, useSelector } from 'react-redux';\n\nfunction Register() {\n  const dispatch = useDispatch();\n  const {\n    registerReduxStore\n  } = useSelector(state => state);\n  const {\n    loading,\n    messages\n  } = registerReduxStore;\n  const register = messages;\n  const initialState = {\n    email: '',\n    password: ''\n  };\n  const {\n    0: userData,\n    1: setUserData\n  } = useState(initialState);\n  const {\n    0: submitStatus,\n    1: setSubmitStatus\n  } = useState({\n    emailMessage: '',\n    passwordMessage: '',\n    loading: false\n  });\n  const {\n    email,\n    password\n  } = userData;\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUserData(_objectSpread(_objectSpread({}, userData), {}, {\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    /*const { emailMessage, passwordMessage } = validRegister(userData.email, userData.password)\r\n      setSubmitStatus({\r\n        emailMessage: emailMessage,\r\n        passwordMessage: passwordMessage,\r\n    })\r\n      if (emailMessage || passwordMessage) {\r\n        console.log('emailMessage: ' + emailMessage + '\\npasswordMessage: ' + passwordMessage)\r\n        return\r\n    }*/\n\n    const res = await postData('/api/auth/register', userData);\n    console.log('ok'); //dispatch(registerAction('/api/auth/register', userData))\n\n    /*if (res.status == 400) {\r\n        setSubmitStatus({\r\n            emailMessage: res.errMessage,\r\n        })\r\n        return\r\n    }*/\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container text-center p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"d-block\",\n      onSubmit: handleSubmit,\n      noValidate: true,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          className: \"d-block\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\" //aria-describedby=\"emailHelp\" \n          ,\n          name: \"email\",\n          onChange: handleInputChange,\n          value: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), submitStatus.emailMessage ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: submitStatus.emailMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 33\n        }, this) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: \"d-block\",\n          children: \"Senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          onChange: handleInputChange,\n          value: password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), submitStatus.passwordMessage ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: submitStatus.passwordMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 33\n        }, this) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: submitStatus.loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 37\n          }, this)\n        }, void 0, false) : 'CADASTRAR'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\nexport default Register;","map":{"version":3,"sources":["C:/Users/Andrey luiz/Desktop/NextJS/next_project/frontend/pages/registrar.js"],"names":["React","useState","postData","validRegister","registerAction","Loading","useDispatch","useSelector","Register","dispatch","registerReduxStore","state","loading","messages","register","initialState","email","password","userData","setUserData","submitStatus","setSubmitStatus","emailMessage","passwordMessage","handleInputChange","e","name","value","target","handleSubmit","preventDefault","res","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { postData } from '../assets/utils/fetchData'\r\nimport validRegister from '../assets/utils/ValidRegister'\r\nimport { registerAction } from '../redux_store/actions/RegisterAction';\r\nimport Loading from '../snnipets/Loading'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nfunction Register() {\r\n\r\n    const dispatch = useDispatch();\r\n    const { registerReduxStore } = useSelector((state) => state)\r\n    const { loading, messages } = registerReduxStore;\r\n    const register = messages;\r\n\r\n    const initialState = { email: '', password: '' }\r\n    const [userData, setUserData] = useState(initialState)\r\n    const [submitStatus, setSubmitStatus] = useState({\r\n        emailMessage: '',\r\n        passwordMessage: '',\r\n        loading: false,\r\n    })\r\n\r\n    const { email, password } = userData\r\n\r\n    const handleInputChange = e => {\r\n        const { name, value } = e.target\r\n        setUserData({ ...userData, [name]: value })\r\n    }\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault()\r\n\r\n        /*const { emailMessage, passwordMessage } = validRegister(userData.email, userData.password)\r\n\r\n        setSubmitStatus({\r\n            emailMessage: emailMessage,\r\n            passwordMessage: passwordMessage,\r\n        })\r\n\r\n        if (emailMessage || passwordMessage) {\r\n            console.log('emailMessage: ' + emailMessage + '\\npasswordMessage: ' + passwordMessage)\r\n            return\r\n        }*/\r\n\r\n        const res = await postData('/api/auth/register', userData)\r\n        console.log('ok')\r\n        //dispatch(registerAction('/api/auth/register', userData))\r\n\r\n\r\n        /*if (res.status == 400) {\r\n            setSubmitStatus({\r\n                emailMessage: res.errMessage,\r\n            })\r\n            return\r\n        }*/\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container text-center p-4\">\r\n            <form className=\"d-block\" onSubmit={handleSubmit} noValidate>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"email\" className=\"d-block\">Email</label>\r\n                    <input type=\"email\" id=\"email\"\r\n                        //aria-describedby=\"emailHelp\" \r\n                        name=\"email\"\r\n                        onChange={handleInputChange} value={email}\r\n                    />\r\n                    {\r\n                        submitStatus.emailMessage ?\r\n                            (\r\n                                <p>{submitStatus.emailMessage}</p>\r\n                            ) :\r\n                            (\r\n                                ''\r\n                            )\r\n                    }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\" className=\"d-block\">Senha</label>\r\n                    <input type=\"password\" id=\"password\" name=\"password\"\r\n                        onChange={handleInputChange} value={password} />\r\n                    {\r\n                        submitStatus.passwordMessage ?\r\n                            (\r\n                                <p>{submitStatus.passwordMessage}</p>\r\n                            ) :\r\n                            (\r\n                                ''\r\n                            )\r\n                    }\r\n                </div>\r\n                <button type=\"submit\">\r\n                    {\r\n                        submitStatus.loading ?\r\n                            (\r\n                                <>\r\n                                    <Loading />\r\n                                </>\r\n                            ) : (\r\n                                'CADASTRAR'\r\n                            )\r\n                    }\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n"]},"metadata":{},"sourceType":"module"}